
/* #include <iostream>
#include <sstream>
#include <iomanip>

using namespace std;


int main()
{
    ostringstream oss; // output string stream object oss
    
    string name = "Alice";
    int score = 95;
    double gpa = 3.876;
    
    // build a message using oss
    oss << "Student: " << name
    << "  | Score: " << score
    << "  | GPA: " << fixed << setprecision(2) << gpa;
    
    // covert the stream into a string
    string message = oss.str();
    
    cout << message << endl;
    
    ostringstream oss1; //.create a new object
    oss1<< "test data" << endl; // new stream
    
    cout << message << endl;
    cout << oss1.str() << endl; // print the string of oss1
    
    

    return 0;
} */

/* #include <iostream>
#include <sstream>

using namespace std;

int main() {
    string input = "100 3.5";
    istringstream iss(input); // stream containing 100 & 3.5
    
    int quantity; // integer 0
    double price; // double 0.0
    
    iss >> quantity >> price;
    
    cout << "total cost: " << (quantity * price) << endl;
    cout << quantity << endl;
    cout << price << endl;
    
    return 0;

} 

*/

/* #include <iostream>
#include <sstream>

using namespace std;

int main() {
    string data = "7 ate 9";
    istringstream iss(data);
    
    int value;
    while(iss >> value){
        cout << "read int: " << value << endl;
        
    }
    
    // when a bad token stops the extraction 
    if (iss.fail()) {
        cout << "stream failed. skipping bad token...." << endl;
        iss.clear(); // clearing the fail state
        string bad;
        iss>> bad;
        cout << bad << endl;
        
    }
    
    //resume reading the next values
    
    while (iss >> value) {
        cout << "read int cont:" << value << endl;
    }
}
*/

#include <iostream>
#include <sstream>
using namespace std;

int main() {
    string data { "input test 123 4.7 A" };
    istringstream iss(data);

    string exString1;
    string exString2;
    int exInt;
    double exDouble;
    char exChar;

    iss >> exString1 >> exString2 >> exInt >> exDouble >> exChar;

    cout << "The following items were extracted from istringstream object:"
         << "\nString: " << exString1
         << "\nString: " << exString2
         << "\nInt: " << exInt
         << "\nDouble: " << exDouble
         << "\nChar: " << exChar << endl;
         
         long value;
         iss >> value;
         
         if (iss.good()){
             cout << "value is: " << value << endl;
         }
         else }
         cout << "\nISS exploded. It's empty. EOF ";
         }

    return 0;
}



